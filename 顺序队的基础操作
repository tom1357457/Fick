#include <bits/stdc++.h>
#define MAXSIZE 15
using namespace std;

typedef int ElemType;
typedef struct SqQueue
{
	ElemType data[MAXSIZE];
	int front;
	int rear;
}SqQueue;

//初始化顺序队
void InitQueue(SqQueue*& q)
{
	q = (SqQueue*)malloc(sizeof(SqQueue));
	q->front = q->rear = -1;
}

//销毁队列
void DestroyQueue(SqQueue*& q)
{
	free(q);
}

//判断队列是否为空
bool QueueEmpty(SqQueue* q)
{
	return(q->front == q->rear);
}

//进队
void enQueue(SqQueue*& q,ElemType e)
{
	if ((q->rear + 1) % MAXSIZE == q->front)//判断队满
		return;
	q->rear = (q->rear + 1) % MAXSIZE;
	q->data[q->rear] = e;
}

//出队
void deQueue(SqQueue*& q, ElemType& e)
{
	if (q->front == q->rear)//判断队空
		return;
	q->front = (q->front + 1) % MAXSIZE;
	e = q->data[q->front];
}

int main()
{
	ElemType e;
	SqQueue* q;
	InitQueue(q);
	for (int i = 0; i < MAXSIZE; i++)
	{
		enQueue(q, i);
	}
	for (int i = 0; i < MAXSIZE; i++)
	{
		deQueue(q, e);
		cout << e << " ";
	}
	DestroyQueue(q);
	cout << endl;
	return 0;
}
